---
# Audit to check if latest keyword exists in repo.yml
# Common env variables
- hosts: all
  vars:
    gather_facts: no
    become: true
    #become_method: sudo
    #remote_user: ubuntu
    #ansible_ssh_user: ubuntu
    become_user: root
    #private_key_file: /path/to/file.pem
    ansible_ssh_port: 22
    ssh_args: -o ControlMaster=auto -o ControlPersist=60s -o UserKnownHostsFile=/dev/null
    #vault_password_file: /root/.vault_pass

  tasks:
    - name: Display Hostname
      shell: hostname
      become: true

    - name: Display the current timestamp in YYYY-MM-DD
      debug:
       var=ansible_date_time

#    - name: Hostname Creation IN /tmp/servername**.txt
#      shell: hostname > /tmp/servername_{{ ansible_date_time.date}}.txt

    - name: Get hostname
      shell: echo $HOSTNAME
      register: hostname
      
    - debug: msg="{{ hostname.stdout }}"

    - name: Check OS Version
      shell: cat /etc/system-release
      register: OSVer

#Use commnad cat /etc/system-release | awk '{print $4}' in case we want to apply template based on major minor version of CentOS or use rpm --eval '%{centos_ver}'

    - debug: msg="{{ OSVer.stdout }}"
#    - name: Ensure yumbackup directory /root/yumbackup exists
#      file:
#        path: /root/yumbackup
#        state: directory
#        group: root
#        mode: 02770
       

#    - name: Create yumbackup directory folder for today
#      file:
#        path: /root/yumbackup/{{ hostname.stdout }}_yum.repos.d{{ ansible_date_time.iso8601_basic_short }}
#        state: directory
#        group: root
#        mode: 02770

    - name: Ensure /tmp/csv exists
      file:
        path: /tmp/csv
        state: directory



    - name: Remove existing csv file of today
      file:
        path: /tmp/csv/test_{{ hostname.stdout }}_{{ ansible_date_time.date}}.csv
        state: absent
        
    - name: Create a blank csv file
      command: touch /tmp/csv/test_{{ hostname.stdout }}_{{ ansible_date_time.date}}.csv
      args:
        creates: /tmp/csv/test_{{ hostname.stdout }}_{{ ansible_date_time.date}}.csv


#    - name: Take backup of yum repo files to  /root/yumbackup/ 
#      copy:
#        src: /etc/yum.repos.d/
#        dest: /root/yumbackup/{{ hostname.stdout }}_yum.repos.d{{ ansible_date_time.iso8601_basic_short }}

           
    - name: Get Latest Keyword in centos.repo
      shell: grep i latest /etc/yum.repos.d/centos*.repo|awk '{print}' ORS='" '
      register: cent_latest_keyword
      
    - debug: msg="{{ cent_latest_keyword.stdout }}"
    
    - name: Get Latest Keyword in epel.repo
      shell: grep -i latest /etc/yum.repos.d/epel*.repo|awk '{print}' ORS='" '
      register: epel_latest_keyword        

    - debug: msg="{{ epel_latest_keyword.stdout }}"        
      
     #- name: Display output Report
     #  debug: report={{ hostname.stdout }} ,{{ cent_latest_keyword.stdout }} , {{ epel_latest_keyword.stdout }}
        
    - name: Get a report on CSV format
      lineinfile:
           insertafter: EOF
           dest: /tmp/csv/test_{{ hostname.stdout }}_{{ ansible_date_time.date}}.csv
           line: "{{ item.0 }},{{ item.1 }},{{ item.2 }},{{ item.3 }}"

      with_together:
           - "{{ hostname.stdout }}"
           - "{{ OSVer.stdout }}"
           - "{{ cent_latest_keyword.stdout }}"
           - "{{ epel_latest_keyword.stdout }}"


    - name: Sync Push task - Executed on source host 
      hosts: phi1v-opsawx01 
      user: TeamCityAgent
      
    - name: Copy the file from Host to phi1v-opsawx01 using Method Push
      tags: sync-push
      synchronize:
        src: "{{ item }}"
        dest: "{{ item }}"
        mode: push
      delegate_to: "{{groups['app'][0]}}"
      register: syncfile
      with_items:
      - "/tmp/csv/test_{{ hostname.stdout }}_{{ ansible_date_time.date}}.csv"
            
#    - name: Download file from Remote Machine to Local ansible-node directory
#      become: yes
#      fetch:
#        src: /tmp/csv/
#        dest: /tmp/csv/      

#    - name: Transfer file from Host to AWX
#      synchronize:
#        src: /tmp/csv/*.csv
#        dest: /tmp/csv/
#        mode: pull
#      delegate_to: phn1v-admweb01
    
